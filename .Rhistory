points(whole_stan,type = "l",cex = 0.5)
points(lowbeta_stan,type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
#Label the peak of whole population(Whole_newinfect)
W_y = max(whole_stan);
W_x = which.max(whole_stan);
point1 <- points(W_x,W_y,pch=8,col="black",cex = 0.5)
#Label the peak of the 0.1%random sample(random_newinfect)
R_y = max(random_stan);
R_x = which.max(SEIR$random_newinfect/(0.001*(5.5*10^6)));
point2 <- points(R_x,R_y,pch=8,col="blue",cex = 0.5)
#Label the peak of the 'cautious 10%'(lowbeta_newinfect)
L_y = max(lowbeta_stan);
L_x = which.max(lowbeta_stan);
point3 <- points(L_x,L_y,pch=8,col="red",cex = 0.5)
# for loop for 10 stimulations
Peak_whole <- Peak_random <- Peak_lowbeta <- rep(0,10)
# create the empty list to store the result
whole_list <- vector(mode = "list", length = 10)
random_list <- vector(mode = "list", length = 10)
lowbeta_list <- vector(mode = "list", length = 10)
seir_covid <- function(n=5500000,ni=10,nt=150,gamma=1/3,delta=1/5) {
## SEIR stochastic simulation model.
## n = population size; ni = initially exposed; nt = number of days
## gamma = daily prob E -> I; delta = daily prob I -> R;
## S = 0, E = 1, I = 2, R = 3
#browser()
lambda = 0.4/n ## lambda is an overall viral infectivity parameter
x <- rep(0,n) ## initialize to susceptible state
x_random <- x_lowbeta <- rep(0,n) # x_random or x_lowbeta
x[1:ni] <- 1 ## create some exposed people
beta <- rlnorm(n,0,0.5); beta <- beta/mean(beta) ## individual infection rates
## find the lowest 10% beta
n_lowbeta <- n * 0.1 # the size of lowest beta group
beta_order_location <- order(beta) # the location of sorted beta in x
low_beta <- order(beta)[1:n_lowbeta]
x_lowbeta[beta_order_location[1:n_lowbeta]] <- 1 # mark first n_lowbeta beta_order_location in x
## generate the random group
n_random <- n * 0.001 # the size of random group
n_random_location <- sample(n,n_random) # random generate the n_random locations from x
x_random[n_random_location] <- 1
# new infections each day
Whole_newinfect <- lowbeta_newinfect <- random_newinfect <- rep(0,nt)
for (i in 2:nt) { ## loop over days
# update the probability of S -> E
probaStoE <- lambda*beta*sum(beta[x==2])
u <- runif(n) ## uniform random deviates
x[x==2&u<delta] <- 3 ## I -> R with prob delta
# sum the three different groups' daily infection
#  Location S->E
whole_location <- x==0&u<probaStoE
random_location <- x[low_beta]==0&u[low_beta]<probaStoE[low_beta]
lowbeta_location <- whole_location&x_lowbeta
Whole_newinfect[i] <- sum(whole_location)
random_newinfect[i] <- sum(random_location)
lowbeta_newinfect[i] <- sum(lowbeta_location)
x[x==1&u<gamma] <- 2 ## E -> I with prob gamma
x[whole_location] <- 1 ## S -> E with probaStoE
}
SEIR = list(Whole_newinfect=Whole_newinfect,random_newinfect=random_newinfect,lowbeta_newinfect=lowbeta_newinfect)
return(SEIR)
} ## seir
SEIR <- seir_covid()
whole_stan <- SEIR$Whole_newinfect/(5.5*10^6)
random_stan <- SEIR$random_newinfect/(0.001*(5.5*10^6))
lowbeta_stan <- SEIR$lowbeta_newinfect/(0.1*(5.5*10^6))
par(mfrow = c(1,2))
plot(SEIR$Whole_newinfect,type = "l",ylim = c(0,max(SEIR$Whole_newinfect)),xlab="day",ylab="the number of new infections")
lines(SEIR$random_newinfect,col=4)
lines(SEIR$lowbeta_newinfect,col=2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Original graph")
#The comparison plot between three group which including whole population(Whole_newinfect), the 'cautious 10%'(lowbeta_newinfect) and the 0.1%random sample(random_newinfect)
plot(random_stan,type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_stan,type = "l",cex = 0.5)
points(lowbeta_stan,type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
#Label the peak of whole population(Whole_newinfect)
W_y = max(whole_stan);
W_x = which.max(whole_stan);
point1 <- points(W_x,W_y,pch=8,col="black",cex = 0.5)
#Label the peak of the 0.1%random sample(random_newinfect)
R_y = max(random_stan);
R_x = which.max(SEIR$random_newinfect/(0.001*(5.5*10^6)));
point2 <- points(R_x,R_y,pch=8,col="blue",cex = 0.5)
#Label the peak of the 'cautious 10%'(lowbeta_newinfect)
L_y = max(lowbeta_stan);
L_x = which.max(lowbeta_stan);
point3 <- points(L_x,L_y,pch=8,col="red",cex = 0.5)
# for loop for 10 stimulations
Peak_whole <- Peak_random <- Peak_lowbeta <- rep(0,10)
# create the empty list to store the result
whole_list <- vector(mode = "list", length = 10)
random_list <- vector(mode = "list", length = 10)
lowbeta_list <- vector(mode = "list", length = 10)
seir_covid <- function(n=5500000,ni=10,nt=150,gamma=1/3,delta=1/5) {
## SEIR stochastic simulation model.
## n = population size; ni = initially exposed; nt = number of days
## gamma = daily prob E -> I; delta = daily prob I -> R;
## S = 0, E = 1, I = 2, R = 3
#browser()
lambda = 0.4/n ## lambda is an overall viral infectivity parameter
x <- rep(0,n) ## initialize to susceptible state
x_random <- x_lowbeta <- rep(0,n) # x_random or x_lowbeta
x[1:ni] <- 1 ## create some exposed people
beta <- rlnorm(n,0,0.5); beta <- beta/mean(beta) ## individual infection rates
## find the lowest 10% beta
n_lowbeta <- n * 0.1 # the size of lowest beta group
beta_order_location <- order(beta) # the location of sorted beta in x
low_beta <- order(beta)[1:n_lowbeta]
x_lowbeta[beta_order_location[1:n_lowbeta]] <- 1 # mark first n_lowbeta beta_order_location in x
## generate the random group
n_random <- n * 0.001 # the size of random group
n_random_location <- sample(n,n_random) # random generate the n_random locations from x
x_random[n_random_location] <- 1
# new infections each day
Whole_newinfect <- lowbeta_newinfect <- random_newinfect <- rep(0,nt)
for (i in 2:nt) { ## loop over days
# update the probability of S -> E
probaStoE <- lambda*beta*sum(beta[x==2])
u <- runif(n) ## uniform random deviates
x[x==2&u<delta] <- 3 ## I -> R with prob delta
# sum the three different groups' daily infection
#  Location S->E
whole_location <- x==0&u<probaStoE
random_location <- whole_location&x_random
lowbeta_location <- whole_location&x_lowbeta
Whole_newinfect[i] <- sum(whole_location)
random_newinfect[i] <- sum(random_location)
lowbeta_newinfect[i] <- sum(lowbeta_location)
x[x==1&u<gamma] <- 2 ## E -> I with prob gamma
x[whole_location] <- 1 ## S -> E with probaStoE
}
SEIR = list(Whole_newinfect=Whole_newinfect,random_newinfect=random_newinfect,lowbeta_newinfect=lowbeta_newinfect)
return(SEIR)
} ## seir
SEIR <- seir_covid()
whole_stan <- SEIR$Whole_newinfect/(5.5*10^6)
random_stan <- SEIR$random_newinfect/(0.001*(5.5*10^6))
lowbeta_stan <- SEIR$lowbeta_newinfect/(0.1*(5.5*10^6))
par(mfrow = c(1,2))
plot(SEIR$Whole_newinfect,type = "l",ylim = c(0,max(SEIR$Whole_newinfect)),xlab="day",ylab="the number of new infections")
lines(SEIR$random_newinfect,col=4)
lines(SEIR$lowbeta_newinfect,col=2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Original graph")
#The comparison plot between three group which including whole population(Whole_newinfect), the 'cautious 10%'(lowbeta_newinfect) and the 0.1%random sample(random_newinfect)
plot(random_stan,type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_stan,type = "l",cex = 0.5)
points(lowbeta_stan,type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
#Label the peak of whole population(Whole_newinfect)
W_y = max(whole_stan);
W_x = which.max(whole_stan);
point1 <- points(W_x,W_y,pch=8,col="black",cex = 0.5)
#Label the peak of the 0.1%random sample(random_newinfect)
R_y = max(random_stan);
R_x = which.max(SEIR$random_newinfect/(0.001*(5.5*10^6)));
point2 <- points(R_x,R_y,pch=8,col="blue",cex = 0.5)
#Label the peak of the 'cautious 10%'(lowbeta_newinfect)
L_y = max(lowbeta_stan);
L_x = which.max(lowbeta_stan);
point3 <- points(L_x,L_y,pch=8,col="red",cex = 0.5)
## Overview???
# The covid model
seir_covid <- function(n=5500000,ni=10,nt=150,gamma=1/3,delta=1/5) {
## SEIR stochastic simulation model.
## n = population size; ni = initially exposed; nt = number of days
## gamma = daily prob E -> I; delta = daily prob I -> R;
## S = 0, E = 1, I = 2, R = 3
#browser()
lambda = 0.4/n ## lambda is an overall viral infectivity parameter
x <- rep(0,n) ## initialize to susceptible state
x_random <- x_lowbeta <- rep(0,n) # x_random or x_lowbeta
x[1:ni] <- 1 ## create some exposed people
beta <- rlnorm(n,0,0.5); beta <- beta/mean(beta) ## individual infection rates
## find the lowest 10% beta
n_lowbeta <- n * 0.1 # the size of lowest beta group
beta_order_location <- order(beta) # the location of sorted beta in x
low_beta <- order(beta)[1:n_lowbeta]
x_lowbeta[beta_order_location[1:n_lowbeta]] <- 1 # mark first n_lowbeta beta_order_location in x
## generate the random group
n_random <- n * 0.001 # the size of random group
n_random_location <- sample(n,n_random) # random generate the n_random locations from x
x_random[n_random_location] <- 1
# new infections each day
Whole_newinfect <- lowbeta_newinfect <- random_newinfect <- rep(0,nt)
for (i in 2:nt) { ## loop over days
# update the probability of S -> E
probaStoE <- lambda*beta*sum(beta[x==2])
u <- runif(n) ## uniform random deviates
x[x==2&u<delta] <- 3 ## I -> R with prob delta
# sum the three different groups' daily infection
#  Location S->E
whole_location <- x==0&u<probaStoE
random_location <- whole_location&x_random
lowbeta_location <- whole_location&x_lowbeta
Whole_newinfect[i] <- sum(whole_location)
random_newinfect[i] <- sum(random_location)
lowbeta_newinfect[i] <- sum(lowbeta_location)
x[x==1&u<gamma] <- 2 ## E -> I with prob gamma
x[whole_location] <- 1 ## S -> E with probaStoE
}
SEIR = list(Whole_newinfect=Whole_newinfect,random_newinfect=random_newinfect,lowbeta_newinfect=lowbeta_newinfect)
return(SEIR)
} ## seir
SEIR <- seir_covid()
whole_stan <- SEIR$Whole_newinfect/(5.5*10^6)
random_stan <- SEIR$random_newinfect/(0.001*(5.5*10^6))
lowbeta_stan <- SEIR$lowbeta_newinfect/(0.1*(5.5*10^6))
par(mfrow = c(1,2))
plot(SEIR$Whole_newinfect,type = "l",ylim = c(0,max(SEIR$Whole_newinfect)),xlab="day",ylab="the number of new infections")
lines(SEIR$random_newinfect,col=4)
lines(SEIR$lowbeta_newinfect,col=2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Original graph")
#The comparison plot between three group which including whole population(Whole_newinfect), the 'cautious 10%'(lowbeta_newinfect) and the 0.1%random sample(random_newinfect)
plot(random_stan,type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_stan,type = "l",cex = 0.5)
points(lowbeta_stan,type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
#Label the peak of whole population(Whole_newinfect)
W_y = max(whole_stan);
W_x = which.max(whole_stan);
point1 <- points(W_x,W_y,pch=8,col="black",cex = 0.5)
#Label the peak of the 0.1%random sample(random_newinfect)
R_y = max(random_stan);
R_x = which.max(SEIR$random_newinfect/(0.001*(5.5*10^6)));
point2 <- points(R_x,R_y,pch=8,col="blue",cex = 0.5)
#Label the peak of the 'cautious 10%'(lowbeta_newinfect)
L_y = max(lowbeta_stan);
L_x = which.max(lowbeta_stan);
point3 <- points(L_x,L_y,pch=8,col="red",cex = 0.5)
# for loop for 10 stimulations
Peak_whole <- Peak_random <- Peak_lowbeta <- rep(0,10)
# create the empty list to store the result
whole_list <- vector(mode = "list", length = 10)
random_list <- vector(mode = "list", length = 10)
lowbeta_list <- vector(mode = "list", length = 10)
for (i in 1:10){
SEIR <- seir_covid()
Peak_whole[i] <- which.max(SEIR$Whole_newinfect)
Peak_random[i] <- which.max(SEIR$random_newinfect)
Peak_lowbeta[i] <- which.max(SEIR$lowbeta_newinfect)
whole_list[[i]] <- SEIR$Whole_newinfect/(5.5*10^6)
random_list[[i]] <- SEIR$random_newinfect/(0.001*(5.5*10^6))
lowbeta_list[[i]] <- SEIR$lowbeta_newinfect/(0.1*(5.5*10^6))
}
# plot
、
whole_list[[1]]
whole_list
save.image
save.image("D:/EDIN/Sem1/StatisticalProgramming/Coursework2/22nd-October/Data.RData")
load("D:/EDIN/Sem1/StatisticalProgramming/Coursework2/22nd-October/Data.RData")
random_list
random_list[[5]]
lowbeta_list[[5]]
plot(random_list[[5]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[5]],type = "l",cex = 0.5)
points(lowbeta_list[[5]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
whole_stan <- SEIR$Whole_newinfect/(5.5*10^6)
random_stan <- SEIR$random_newinfect/(0.001*(5.5*10^6))
lowbeta_stan <- SEIR$lowbeta_newinfect/(0.1*(5.5*10^6))
par(mfrow = c(1,2))
plot(SEIR$Whole_newinfect,type = "l",ylim = c(0,max(SEIR$Whole_newinfect)),xlab="day",ylab="the number of new infections")
lines(SEIR$random_newinfect,col=4)
lines(SEIR$lowbeta_newinfect,col=2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Original graph")
#The comparison plot between three group which including whole population(Whole_newinfect), the 'cautious 10%'(lowbeta_newinfect) and the 0.1%random sample(random_newinfect)
plot(random_stan,type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_stan,type = "l",cex = 0.5)
points(lowbeta_stan,type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
#Label the peak of whole population(Whole_newinfect)
W_y = max(whole_stan);
W_x = which.max(whole_stan);
point1 <- points(W_x,W_y,pch=8,col="black",cex = 0.5)
#Label the peak of the 0.1%random sample(random_newinfect)
R_y = max(random_stan);
R_x = which.max(SEIR$random_newinfect/(0.001*(5.5*10^6)));
point2 <- points(R_x,R_y,pch=8,col="blue",cex = 0.5)
#Label the peak of the 'cautious 10%'(lowbeta_newinfect)
L_y = max(lowbeta_stan);
L_x = which.max(lowbeta_stan);
point3 <- points(L_x,L_y,pch=8,col="red",cex = 0.5)
dev.off()
whole_stan <- SEIR$Whole_newinfect/(5.5*10^6)
random_stan <- SEIR$random_newinfect/(0.001*(5.5*10^6))
lowbeta_stan <- SEIR$lowbeta_newinfect/(0.1*(5.5*10^6))
par(mfrow = c(1,2))
plot(SEIR$Whole_newinfect,type = "l",ylim = c(0,max(SEIR$Whole_newinfect)),xlab="day",ylab="the number of new infections")
lines(SEIR$random_newinfect,col=4)
lines(SEIR$lowbeta_newinfect,col=2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Original graph")
#The comparison plot between three group which including whole population(Whole_newinfect), the 'cautious 10%'(lowbeta_newinfect) and the 0.1%random sample(random_newinfect)
plot(random_stan,type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_stan,type = "l",cex = 0.5)
points(lowbeta_stan,type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
#Label the peak of whole population(Whole_newinfect)
W_y = max(whole_stan);
W_x = which.max(whole_stan);
point1 <- points(W_x,W_y,pch=8,col="black",cex = 0.5)
#Label the peak of the 0.1%random sample(random_newinfect)
R_y = max(random_stan);
R_x = which.max(SEIR$random_newinfect/(0.001*(5.5*10^6)));
point2 <- points(R_x,R_y,pch=8,col="blue",cex = 0.5)
#Label the peak of the 'cautious 10%'(lowbeta_newinfect)
L_y = max(lowbeta_stan);
L_x = which.max(lowbeta_stan);
point3 <- points(L_x,L_y,pch=8,col="red",cex = 0.5)
dev.off()
# plot
plot(random_list[[5]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[5]],type = "l",cex = 0.5)
points(lowbeta_list[[5]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
dev.off()
# plot
for (i in 1:10){
plot(random_list[[5]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[5]],type = "l",cex = 0.5)
points(lowbeta_list[[5]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
par(new=TRUE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
dev.off
dev.off()
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
par(new=TRUE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l")
points(whole_list[[i]],type = "l")
points(lowbeta_list[[i]],type = "l") ## E (blue) and I (red)
par(new=TRUE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
par(new=FALSE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
par(new=TRUE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
par(new=TRUE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
load("D:/EDIN/Sem1/StatisticalProgramming/Coursework2/22nd-October/Data.RData")
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
par(new=TRUE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
# plot
for (i in 1:10){
plot(random_list[[i]],type = "l",cex = 0.5,col = 4,xlab="day",ylab="the number of new infections")
points(whole_list[[i]],type = "l",cex = 0.5)
points(lowbeta_list[[i]],type = "l",cex = 0.5,col = 2) ## E (blue) and I (red)
par(new=TRUE)
}
legend <- legend("topleft",
c("whole population","the 'cautious'","the random sample"),
col=c("black","red","blue"),
lty = 1,lwd = 2,
cex = 0.6)
title(main = "Standardized graph")
